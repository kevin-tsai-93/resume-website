module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/connect4.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/portfolio/Connect4Game.js":
/*!**********************************************!*\
  !*** ./components/portfolio/Connect4Game.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _connect4_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect4/Board */ \"./components/portfolio/connect4/Board.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _connect4_minimax__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect4/minimax */ \"./components/portfolio/connect4/minimax.js\");\n/* harmony import */ var _connect4_deepCopy2DArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./connect4/deepCopy2DArray */ \"./components/portfolio/connect4/deepCopy2DArray.js\");\n/* harmony import */ var _connect4_new2DArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connect4/new2DArray */ \"./components/portfolio/connect4/new2DArray.js\");\n\n\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/components/portfolio/Connect4Game.js\";\n\n\n\n\n // Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nconst HUMAN = \"you\";\nconst AI = \"ai\";\nconst TOTALNUMOFROWS = 6;\nconst TOTALNUMOFCOLS = 7;\n\nclass Connect4Game extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Object(_connect4_new2DArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(TOTALNUMOFROWS, TOTALNUMOFCOLS),\n      // i.e. squares[rowIdx][colIdx] is initialized to null and will be either HUMAN or AI when pieces are placed onto board\n      winner: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.findLegalRowIdxWithinColumn = this.findLegalRowIdxWithinColumn.bind(this);\n    this.calculateWinner = this.calculateWinner.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.aiCalculatesNextMove = this.aiCalculatesNextMove.bind(this);\n  }\n\n  handleClick(selectedColIdx) {\n    const squares = Object(_connect4_deepCopy2DArray__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.state.squares);\n    const legalRowPositionToFillIdx = this.findLegalRowIdxWithinColumn(selectedColIdx);\n\n    if (legalRowPositionToFillIdx !== -1) {\n      squares[legalRowPositionToFillIdx][selectedColIdx] = HUMAN;\n      let winner = this.calculateWinner(squares, HUMAN, legalRowPositionToFillIdx, selectedColIdx); // let the AI make a move if it's the AI's turn and the game isn't over\n\n      if (winner === null) {\n        const [aiSelectedRowIdx, aiSelectedColIdx] = this.aiCalculatesNextMove(squares);\n        squares[aiSelectedRowIdx][aiSelectedColIdx] = AI;\n        winner = this.calculateWinner(squares, AI, aiSelectedRowIdx, aiSelectedColIdx);\n      }\n\n      this.setState(prevState => ({\n        squares: squares,\n        winner: winner\n      }));\n    }\n  }\n\n  handleReset() {\n    this.setState({\n      squares: Object(_connect4_new2DArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(TOTALNUMOFROWS, TOTALNUMOFCOLS),\n      winner: null\n    });\n  }\n\n  aiCalculatesNextMove(board) {\n    /**\n     * This function calculates the optimal move for the ai using the minimax algorithm.\n     * This function takes in a board (2 x 2) array with board[rowIdx][colIdx] === HUMAN or AI or null.\n     * This function returns the row index and column index (the position on the board)\n     * such that the AI should place it piece.\n     */\n    let [optimalRowIdx, optimalColIdx] = Object(_connect4_minimax__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(board, 5, Number.MIN_VALUE, Number.MAX_VALUE, true, AI, HUMAN); // let max = 6;\n    // let min = 0;\n    // let randIdx = Math.floor(Math.random() * (max - min + 1) + min);\n    // let aiSelectedIdx = this.findLegalRowIdxWithinColumn(randIdx);\n    // while (aiSelectedIdx === -1) {\n    //     randIdx = Math.floor(Math.random() * (max - min + 1) + min);\n    //     aiSelectedIdx = this.findLegalRowIdxWithinColumn(randIdx);\n    // }\n\n    return [optimalRowIdx, optimalColIdx];\n  }\n\n  findLegalRowIdxWithinColumn(selectedColIdx) {\n    /**\n     * Returns the row index of a legal square that can be filled.\n     * Note the legal square will be within the same column as selectedColIdx.\n     * If all the squares within selectedColIdx's column are filled, then this function returns -1.\n     */\n    const didNotFindLegalRowIdxWithinColumnIdx = -1;\n\n    for (let rowIdx = 0; rowIdx < this.state.squares.length; rowIdx++) {\n      if (this.state.squares[rowIdx][selectedColIdx] === null) {\n        return rowIdx;\n      }\n    }\n\n    return didNotFindLegalRowIdxWithinColumnIdx;\n  }\n\n  calculateWinner(board, mostRecentPlayer, mostRecentSelectionRowIdx, mostRecentSelectionColIdx) {\n    /**\n     * Returns the name of the winner HUMAN or AI. If no winner, returns null.\n     */\n    let winner = null;\n    const WINDOW = 4; // if game just started, there is no winner\n\n    if (mostRecentSelectionRowIdx === null) {\n      return winner;\n    } // Check horizontal\n\n\n    for (let colIdx = 0; colIdx + WINDOW <= TOTALNUMOFCOLS; colIdx++) {\n      const fourHorizontalAdjacentSquares = board[mostRecentSelectionRowIdx].slice(colIdx, colIdx + WINDOW);\n\n      if (fourHorizontalAdjacentSquares.every(val => val === mostRecentPlayer)) {\n        winner = mostRecentPlayer;\n        return winner;\n      }\n    } // Check vertical\n\n\n    for (let rowIdx = 0; rowIdx + WINDOW <= TOTALNUMOFROWS; rowIdx++) {\n      let matchingMostRecentPlayerCounter = 0;\n\n      for (let offset = 0; offset < WINDOW; offset++) {\n        if (board[rowIdx + offset][mostRecentSelectionColIdx] === mostRecentPlayer) {\n          matchingMostRecentPlayerCounter++;\n        }\n\n        if (matchingMostRecentPlayerCounter === WINDOW) {\n          winner = mostRecentPlayer;\n          return winner;\n        }\n      }\n    } // Check Diagonal\n    // check positively sloped diagonal... from bottom-left to top-right\n\n\n    const positiveDiagonalArr = [];\n    let rowIdx = mostRecentSelectionRowIdx;\n    let colIdx = mostRecentSelectionColIdx;\n\n    while (rowIdx - 1 >= 0 && colIdx - 1 >= 0) {\n      rowIdx--;\n      colIdx--;\n    }\n\n    while (rowIdx < TOTALNUMOFROWS && colIdx < TOTALNUMOFCOLS) {\n      positiveDiagonalArr.push(board[rowIdx][colIdx]);\n      rowIdx++;\n      colIdx++;\n    }\n\n    for (let i = 0; i + WINDOW <= positiveDiagonalArr.length; i++) {\n      const fourPositiveDiagonalAdjacentSquares = positiveDiagonalArr.slice(i, i + WINDOW);\n\n      if (fourPositiveDiagonalAdjacentSquares.every(val => val === mostRecentPlayer)) {\n        winner = mostRecentPlayer;\n        return winner;\n      }\n    } // check negatively sloped diagonal... from top-left to bottom-right\n\n\n    const negativeDiagonalArr = [];\n    rowIdx = mostRecentSelectionRowIdx;\n    colIdx = mostRecentSelectionColIdx;\n\n    while (rowIdx - 1 >= 0 && colIdx + 1 < TOTALNUMOFCOLS) {\n      rowIdx--;\n      colIdx++;\n    }\n\n    while (rowIdx < TOTALNUMOFROWS && colIdx >= 0) {\n      negativeDiagonalArr.push(board[rowIdx][colIdx]);\n      rowIdx++;\n      colIdx--;\n    }\n\n    for (let i = 0; i + WINDOW <= negativeDiagonalArr.length; i++) {\n      const fourNegativeDiagonalAdjacentSquares = negativeDiagonalArr.slice(i, i + WINDOW);\n\n      if (fourNegativeDiagonalAdjacentSquares.every(val => val === mostRecentPlayer)) {\n        winner = mostRecentPlayer;\n        return winner;\n      }\n    }\n\n    return winner; // if no winner was found, winner variable does not change from intial null initialization\n  }\n\n  render() {\n    let isGameOver = false;\n\n    if (this.state.winner !== null) {\n      isGameOver = true;\n    } else if (!this.state.squares.map(row => row.includes(null)).includes(true)) {\n      // meaning every piece on the board is filled but no winner (implying a tie)\n      isGameOver = true;\n    } // setup the display\n\n\n    const horizontalRule = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"hr\", {\n      style: {\n        visibility: \"hidden\",\n        marginBottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 32\n    }, this);\n\n    const button = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n      style: {\n        outline: \"none\",\n        userSelect: \"none\"\n      },\n      onClick: this.handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 24\n    }, this);\n\n    let greeting = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h5\", {\n      className: \"d-flex justify-content-center\",\n      children: \"Good luck!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 24\n    }, this);\n\n    let board = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_connect4_Board__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        squares: this.state.squares,\n        onClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }, this);\n\n    if (isGameOver) {\n      board = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_connect4_Board__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n          squares: this.state.squares,\n          onClick: () => {\n            return;\n            /* this does nothing... Disables onClick */\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.winner === HUMAN) {\n      greeting = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h5\", {\n        className: \"d-flex justify-content-center fade-in\",\n        children: \"\\uD83C\\uDF89 Congratulations! You won! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 24\n      }, this);\n    } else if (this.state.winner === AI) {\n      greeting = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h5\", {\n        className: \"d-flex justify-content-center fade-in\",\n        children: \"The AI won! Try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 24\n      }, this);\n    } else if (this.state.winner === null && isGameOver) {\n      // this would mean the game ended in a tie\n      greeting = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h5\", {\n        className: \"d-flex justify-content-center fade-in\",\n        children: \"It's a draw! Try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 24\n      }, this);\n    }\n\n    let display = /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n      children: [greeting, /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [button, horizontalRule]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }, this), board]\n    }, void 0, true);\n\n    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h4\", {\n        className: \"d-flex justify-content-center\",\n        children: \"Welcome to Connect 4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), display]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Connect4Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/portfolio/Connect4Game.js\n");

/***/ }),

/***/ "./components/portfolio/connect4/Board.js":
/*!************************************************!*\
  !*** ./components/portfolio/connect4/Board.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Square__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Square */ \"./components/portfolio/connect4/Square.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/components/portfolio/connect4/Board.js\";\n\n\n\nclass Board extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {\n  renderSquare(rowIdx, colIdx) {\n    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_Square__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      value: this.props.squares[rowIdx][colIdx],\n      onClick: () => this.props.onClick(colIdx)\n    }, (rowIdx + 1) * (colIdx + 1), false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this);\n  }\n\n  render() {\n    const display = []; // began with last row index and traverse to beginning row index because we display the rows from top row to bottom\n\n    for (let rowIdx = this.props.squares.length - 1; rowIdx >= 0; rowIdx--) {\n      const rowOfSquares = [];\n\n      for (let colIdx = 0; colIdx < this.props.squares[0].length; colIdx++) {\n        rowOfSquares.push(this.renderSquare(rowIdx, colIdx));\n      }\n\n      display.push( /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"tr\", {\n        className: \"board-row\",\n        children: rowOfSquares\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this));\n    }\n\n    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"table\", {\n        className: \"table table-borderless\",\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"tbody\", {\n          children: display\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9Cb2FyZC5qcz8xODdiIl0sIm5hbWVzIjpbIkJvYXJkIiwiUmVhY3QiLCJDb21wb25lbnQiLCJyZW5kZXJTcXVhcmUiLCJyb3dJZHgiLCJjb2xJZHgiLCJwcm9wcyIsInNxdWFyZXMiLCJvbkNsaWNrIiwicmVuZGVyIiwiZGlzcGxheSIsImxlbmd0aCIsInJvd09mU3F1YXJlcyIsInB1c2giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQSxNQUFNQSxLQUFOLFNBQW9CQyw0Q0FBSyxDQUFDQyxTQUExQixDQUFvQztBQUNoQ0MsY0FBWSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsRUFBaUI7QUFDekIsd0JBQ0UscUVBQUMsK0NBQUQ7QUFFRSxXQUFLLEVBQUUsS0FBS0MsS0FBTCxDQUFXQyxPQUFYLENBQW1CSCxNQUFuQixFQUEyQkMsTUFBM0IsQ0FGVDtBQUdFLGFBQU8sRUFBRSxNQUFNLEtBQUtDLEtBQUwsQ0FBV0UsT0FBWCxDQUFtQkgsTUFBbkI7QUFIakIsT0FDTyxDQUFDRCxNQUFNLEdBQUcsQ0FBVixLQUFnQkMsTUFBTSxHQUFHLENBQXpCLENBRFA7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQURGO0FBT0g7O0FBRURJLFFBQU0sR0FBRztBQUVMLFVBQU1DLE9BQU8sR0FBRyxFQUFoQixDQUZLLENBSUw7O0FBQ0EsU0FBSyxJQUFJTixNQUFNLEdBQUcsS0FBS0UsS0FBTCxDQUFXQyxPQUFYLENBQW1CSSxNQUFuQixHQUE0QixDQUE5QyxFQUFpRFAsTUFBTSxJQUFJLENBQTNELEVBQThEQSxNQUFNLEVBQXBFLEVBQXdFO0FBQ3BFLFlBQU1RLFlBQVksR0FBRyxFQUFyQjs7QUFDQSxXQUFLLElBQUlQLE1BQU0sR0FBRyxDQUFsQixFQUFxQkEsTUFBTSxHQUFHLEtBQUtDLEtBQUwsQ0FBV0MsT0FBWCxDQUFtQixDQUFuQixFQUFzQkksTUFBcEQsRUFBNEROLE1BQU0sRUFBbEUsRUFBc0U7QUFDbEVPLG9CQUFZLENBQUNDLElBQWIsQ0FBa0IsS0FBS1YsWUFBTCxDQUFrQkMsTUFBbEIsRUFBMEJDLE1BQTFCLENBQWxCO0FBQ0g7O0FBQ0RLLGFBQU8sQ0FBQ0csSUFBUixlQUFhO0FBQWlCLGlCQUFTLEVBQUMsV0FBM0I7QUFBQSxrQkFBd0NEO0FBQXhDLFNBQVNSLE1BQVQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQUFiO0FBQ0g7O0FBRUQsd0JBQ0k7QUFBSyxlQUFTLEVBQUMsa0JBQWY7QUFBQSw2QkFDSTtBQUFPLGlCQUFTLEVBQUMsd0JBQWpCO0FBQUEsK0JBQ0k7QUFBQSxvQkFDS007QUFETDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURKO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFESjtBQVNIOztBQWpDK0I7O0FBb0NyQlYsb0VBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9Cb2FyZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTcXVhcmUgZnJvbSAnLi9TcXVhcmUnO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgQm9hcmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlclNxdWFyZShyb3dJZHgsIGNvbElkeCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxTcXVhcmUgXG4gICAgICAgICAgICBrZXk9eyhyb3dJZHggKyAxKSAqIChjb2xJZHggKyAxKX1cbiAgICAgICAgICAgIHZhbHVlPXt0aGlzLnByb3BzLnNxdWFyZXNbcm93SWR4XVtjb2xJZHhdfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5wcm9wcy5vbkNsaWNrKGNvbElkeCl9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgY29uc3QgZGlzcGxheSA9IFtdO1xuXG4gICAgICAgIC8vIGJlZ2FuIHdpdGggbGFzdCByb3cgaW5kZXggYW5kIHRyYXZlcnNlIHRvIGJlZ2lubmluZyByb3cgaW5kZXggYmVjYXVzZSB3ZSBkaXNwbGF5IHRoZSByb3dzIGZyb20gdG9wIHJvdyB0byBib3R0b21cbiAgICAgICAgZm9yIChsZXQgcm93SWR4ID0gdGhpcy5wcm9wcy5zcXVhcmVzLmxlbmd0aCAtIDE7IHJvd0lkeCA+PSAwOyByb3dJZHgtLSkgeyBcbiAgICAgICAgICAgIGNvbnN0IHJvd09mU3F1YXJlcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgY29sSWR4ID0gMDsgY29sSWR4IDwgdGhpcy5wcm9wcy5zcXVhcmVzWzBdLmxlbmd0aDsgY29sSWR4KyspIHtcbiAgICAgICAgICAgICAgICByb3dPZlNxdWFyZXMucHVzaCh0aGlzLnJlbmRlclNxdWFyZShyb3dJZHgsIGNvbElkeCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGlzcGxheS5wdXNoKDx0ciBrZXk9e3Jvd0lkeH0gY2xhc3NOYW1lPVwiYm9hcmQtcm93XCI+e3Jvd09mU3F1YXJlc308L3RyPik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWJsZS1yZXNwb25zaXZlXCI+XG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlIHRhYmxlLWJvcmRlcmxlc3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAge2Rpc3BsYXl9XG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQm9hcmQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/portfolio/connect4/Board.js\n");

/***/ }),

/***/ "./components/portfolio/connect4/Square.js":
/*!*************************************************!*\
  !*** ./components/portfolio/connect4/Square.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/components/portfolio/connect4/Square.js\";\nconst HUMAN = \"you\";\nconst COMPUTER = \"ai\";\n\nfunction Square(props) {\n  let squareIsFilled = \"\";\n\n  if (props.value === HUMAN) {\n    squareIsFilled = \"square-human-filled\";\n  } else if (props.value === COMPUTER) {\n    squareIsFilled = \"square-ai-filled\";\n  }\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"td\", {\n    className: `square ${squareIsFilled} `,\n    onClick: props.onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Square);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9TcXVhcmUuanM/ODRhMSJdLCJuYW1lcyI6WyJIVU1BTiIsIkNPTVBVVEVSIiwiU3F1YXJlIiwicHJvcHMiLCJzcXVhcmVJc0ZpbGxlZCIsInZhbHVlIiwib25DbGljayJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUcsS0FBZDtBQUNBLE1BQU1DLFFBQVEsR0FBRyxJQUFqQjs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxLQUFoQixFQUF1QjtBQUNuQixNQUFJQyxjQUFjLEdBQUcsRUFBckI7O0FBQ0EsTUFBSUQsS0FBSyxDQUFDRSxLQUFOLEtBQWdCTCxLQUFwQixFQUEyQjtBQUN2Qkksa0JBQWMsR0FBRyxxQkFBakI7QUFDSCxHQUZELE1BRVEsSUFBSUQsS0FBSyxDQUFDRSxLQUFOLEtBQWdCSixRQUFwQixFQUE4QjtBQUNsQ0csa0JBQWMsR0FBRyxrQkFBakI7QUFDSDs7QUFDRCxzQkFDSTtBQUFJLGFBQVMsRUFBRyxVQUFTQSxjQUFlLEdBQXhDO0FBQTRDLFdBQU8sRUFBRUQsS0FBSyxDQUFDRztBQUEzRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREo7QUFLSDs7QUFFY0oscUVBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9TcXVhcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIVU1BTiA9IFwieW91XCI7XG5jb25zdCBDT01QVVRFUiA9IFwiYWlcIjtcblxuZnVuY3Rpb24gU3F1YXJlKHByb3BzKSB7XG4gICAgbGV0IHNxdWFyZUlzRmlsbGVkID0gXCJcIjtcbiAgICBpZiAocHJvcHMudmFsdWUgPT09IEhVTUFOKSB7XG4gICAgICAgIHNxdWFyZUlzRmlsbGVkID0gXCJzcXVhcmUtaHVtYW4tZmlsbGVkXCI7XG4gICAgfSBlbHNlICBpZiAocHJvcHMudmFsdWUgPT09IENPTVBVVEVSKSB7XG4gICAgICAgIHNxdWFyZUlzRmlsbGVkID0gXCJzcXVhcmUtYWktZmlsbGVkXCI7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDx0ZCBjbGFzc05hbWU9e2BzcXVhcmUgJHtzcXVhcmVJc0ZpbGxlZH0gYH0gb25DbGljaz17cHJvcHMub25DbGlja30+XG4gICAgICAgICAgICB7Lyoge3Byb3BzLnZhbHVlfSAqL31cbiAgICAgICAgPC90ZD5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBTcXVhcmU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/portfolio/connect4/Square.js\n");

/***/ }),

/***/ "./components/portfolio/connect4/deepCopy2DArray.js":
/*!**********************************************************!*\
  !*** ./components/portfolio/connect4/deepCopy2DArray.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction deepCopy2DArray(arr) {\n  const newArr = new Array(arr.length);\n\n  for (let rowIdx = 0; rowIdx < newArr.length; rowIdx++) {\n    newArr[rowIdx] = new Array(arr[rowIdx].length);\n\n    for (let colIdx = 0; colIdx < newArr[rowIdx].length; colIdx++) {\n      newArr[rowIdx][colIdx] = arr[rowIdx][colIdx];\n    }\n  }\n\n  return newArr;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (deepCopy2DArray);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9kZWVwQ29weTJEQXJyYXkuanM/NTI3ZSJdLCJuYW1lcyI6WyJkZWVwQ29weTJEQXJyYXkiLCJhcnIiLCJuZXdBcnIiLCJBcnJheSIsImxlbmd0aCIsInJvd0lkeCIsImNvbElkeCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUE4QjtBQUMxQixRQUFNQyxNQUFNLEdBQUcsSUFBSUMsS0FBSixDQUFVRixHQUFHLENBQUNHLE1BQWQsQ0FBZjs7QUFFQSxPQUFLLElBQUlDLE1BQU0sR0FBRyxDQUFsQixFQUFxQkEsTUFBTSxHQUFHSCxNQUFNLENBQUNFLE1BQXJDLEVBQTZDQyxNQUFNLEVBQW5ELEVBQXVEO0FBQ25ESCxVQUFNLENBQUNHLE1BQUQsQ0FBTixHQUFpQixJQUFJRixLQUFKLENBQVVGLEdBQUcsQ0FBQ0ksTUFBRCxDQUFILENBQVlELE1BQXRCLENBQWpCOztBQUNBLFNBQUssSUFBSUUsTUFBTSxHQUFHLENBQWxCLEVBQXFCQSxNQUFNLEdBQUdKLE1BQU0sQ0FBQ0csTUFBRCxDQUFOLENBQWVELE1BQTdDLEVBQXFERSxNQUFNLEVBQTNELEVBQStEO0FBQzNESixZQUFNLENBQUNHLE1BQUQsQ0FBTixDQUFlQyxNQUFmLElBQXlCTCxHQUFHLENBQUNJLE1BQUQsQ0FBSCxDQUFZQyxNQUFaLENBQXpCO0FBQ0g7QUFDSjs7QUFFRCxTQUFPSixNQUFQO0FBRUg7O0FBRWNGLDhFQUFmIiwiZmlsZSI6Ii4vY29tcG9uZW50cy9wb3J0Zm9saW8vY29ubmVjdDQvZGVlcENvcHkyREFycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZGVlcENvcHkyREFycmF5KGFycikge1xuICAgIGNvbnN0IG5ld0FyciA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTtcbiAgICBcbiAgICBmb3IgKGxldCByb3dJZHggPSAwOyByb3dJZHggPCBuZXdBcnIubGVuZ3RoOyByb3dJZHgrKykge1xuICAgICAgICBuZXdBcnJbcm93SWR4XSA9IG5ldyBBcnJheShhcnJbcm93SWR4XS5sZW5ndGgpO1xuICAgICAgICBmb3IgKGxldCBjb2xJZHggPSAwOyBjb2xJZHggPCBuZXdBcnJbcm93SWR4XS5sZW5ndGg7IGNvbElkeCsrKSB7XG4gICAgICAgICAgICBuZXdBcnJbcm93SWR4XVtjb2xJZHhdID0gYXJyW3Jvd0lkeF1bY29sSWR4XTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXdBcnI7XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVlcENvcHkyREFycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/portfolio/connect4/deepCopy2DArray.js\n");

/***/ }),

/***/ "./components/portfolio/connect4/minimax.js":
/*!**************************************************!*\
  !*** ./components/portfolio/connect4/minimax.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return minimax; });\n/* harmony import */ var _deepCopy2DArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deepCopy2DArray */ \"./components/portfolio/connect4/deepCopy2DArray.js\");\n\nfunction minimax(board, depth, alpha, beta, isMaximizingPlayer, maximizingPlayer, minimizingPlayer) {\n  /**\n   * minimax algorithm to determine how and where the ai will make its move\n   * refer to the pseudocode on wikipedia\n   * it will return the optimal rowIdx and colIdx, the location to place the piece onto the board\n   * return value looks like [optimalRowIdx, optimalColIdx, maxScore]... the 0th and 1st position of this array tell where the AI should go\n   * \n   * board is a row x col array\n   * depth tells you how far down the tree you will traverse to find the calculated score\n   * maximizingPlayer is the player that is trying to win... in this case the AI = \"ai\"\n   * minimizingPlayer is the player that is trying to prevent the maximizingPlayer from winning... in this case HUMAN = \"you\"\n   */\n  const possibleColumnIndices = getAllValidColumnPositions(board);\n  const isTheEndOfGame = isGameOver(board, maximizingPlayer, minimizingPlayer);\n\n  if (depth === 0 || isTheEndOfGame) {\n    if (isTheEndOfGame) {\n      if (isWinner(board, maximizingPlayer)) {\n        return [null, null, 99999999999];\n      } else if (isWinner(board, minimizingPlayer)) {\n        return [null, null, -99999999999];\n      } else {\n        // Game is over. A tie has occurred.\n        return [null, null, 0];\n      }\n    } else {\n      // else the depth is 0\n      return [null, null, calculateScore(board, maximizingPlayer, minimizingPlayer)];\n    }\n  }\n\n  if (isMaximizingPlayer) {\n    let maxScore = Number.MIN_VALUE;\n    let randomIdx = Math.floor(Math.random() * possibleColumnIndices.length);\n    let colIdx = possibleColumnIndices[randomIdx];\n    let rowIdx = findLegalRowIdxWithinColumn(board, colIdx);\n\n    for (let i = 0; i < possibleColumnIndices.length; i++) {\n      let currRowIdx = findLegalRowIdxWithinColumn(board, possibleColumnIndices[i]);\n      const newBoard = putPieceOntoTheBoard(currRowIdx, possibleColumnIndices[i], board, maximizingPlayer);\n      const newScore = minimax(newBoard, depth - 1, alpha, beta, false, maximizingPlayer, minimizingPlayer)[2];\n\n      if (newScore > maxScore) {\n        maxScore = newScore;\n        colIdx = possibleColumnIndices[i];\n        rowIdx = currRowIdx;\n      }\n\n      let newAlpha = Math.max(alpha, maxScore);\n\n      if (newAlpha >= beta) {\n        break;\n      }\n    }\n\n    return [rowIdx, colIdx, maxScore];\n  } else {\n    // else it's the minimizing player\n    let minScore = Number.MAX_VALUE;\n    let randomIdx = Math.floor(Math.random() * possibleColumnIndices.length);\n    let colIdx = possibleColumnIndices[randomIdx];\n    let rowIdx = findLegalRowIdxWithinColumn(board, colIdx);\n\n    for (let i = 0; i < possibleColumnIndices.length; i++) {\n      let currRowIdx = findLegalRowIdxWithinColumn(board, possibleColumnIndices[i]);\n      const newBoard = putPieceOntoTheBoard(currRowIdx, possibleColumnIndices[i], board, minimizingPlayer);\n      const newScore = minimax(newBoard, depth - 1, alpha, beta, true, maximizingPlayer, minimizingPlayer)[2];\n\n      if (newScore < minScore) {\n        minScore = newScore;\n        colIdx = possibleColumnIndices[i];\n        rowIdx = currRowIdx;\n      }\n\n      let newBeta = Math.min(beta, minScore);\n\n      if (newBeta <= alpha) {\n        break;\n      }\n    }\n\n    return [rowIdx, colIdx, minScore];\n  }\n}\n\nfunction getAllValidColumnPositions(board) {\n  /**\n   * Returns all the possible columns that have a valid row position to place the piece onto the board\n   * The return value is an array with the elements inside being the index of the column position\n   */\n  const TOTALNUMOFCOLUMNS = board[0].length; // get all the possible moves that the player can drop onto the board\n  // will have 2 arrays: column index array and row index array\n  // refer to the note below about the relationship between these two arrays\n\n  const columnIndicesOfBoard = []; // this will look like [0,1,2,3,4,5,6]\n\n  for (let i = 0; i < TOTALNUMOFCOLUMNS; i++) {\n    columnIndicesOfBoard.push(i);\n  } // note that possibleRowIndicesToPlacePieceOntoBoard is relative to columnIndicesOfBoard\n  // i.e. columnIndicesOfBoard = [0,1,2,3,4,5,6]\n  // i.e. possibleRowIndicesToPlacePieceOntoBoard = [3,3,4,2,1,2,1]\n  // this means board[3][0]... board[3][1]... board[4][2]... board[2][3]... board[1][4]... etc are pieces that can be placed onto the board\n\n\n  const possibleRowIndicesToPlacePieceOntoBoard = columnIndicesOfBoard.map(colIdx => findLegalRowIdxWithinColumn(board, colIdx)); // note that possibleRowIndicesToPlacePieceOntoBoard might have -1 values\n  // get all the columns for which the corresponding possibleRowIndicesToPlacePieceOntoBoard !== -1\n\n  const possibleColumnIndicesToPlacePieceOntoBoard = [];\n\n  for (let i = 0; i < columnIndicesOfBoard.length; i++) {\n    if (possibleRowIndicesToPlacePieceOntoBoard[i] !== -1) {\n      possibleColumnIndicesToPlacePieceOntoBoard.push(i);\n    }\n  }\n\n  return possibleColumnIndicesToPlacePieceOntoBoard;\n}\n\nfunction putPieceOntoTheBoard(rowIdx, colIdx, board, player) {\n  /**\n   * returns a new board such that the newBoard[rowIdx][colIdx] = player and the other values are the same as board\n   */\n  const newBoard = Object(_deepCopy2DArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(board);\n  newBoard[rowIdx][colIdx] = player;\n  return newBoard;\n}\n\nfunction isGameOver(board, maximizingPlayer, minimizingPlayer) {\n  if (isWinner(board, maximizingPlayer)) {\n    return true;\n  } else if (isWinner(board, minimizingPlayer)) {\n    return true;\n  } else if (isBoardAllFilled(board)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isBoardAllFilled(board) {\n  return board.map(row => row.every(piece => piece !== null)).every(isRowFilled => isRowFilled === true);\n}\n\nfunction isWinner(board, player) {\n  const WINDOWLENGTH = 4;\n  const TOTALNUMOFROWS = board.length;\n  const TOTALNUMOFCOLUMNS = board[0].length; // check horizontal\n\n  for (let currRowIdx = 0; currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    for (let offset = 0; offset + WINDOWLENGTH <= TOTALNUMOFCOLUMNS; offset++) {\n      const horizontalFourAdjacentSquares = board[currRowIdx].slice(offset, offset + WINDOWLENGTH);\n\n      if (horizontalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // Check vertical\n\n\n  for (let currColIdx = 0; currColIdx < TOTALNUMOFCOLUMNS; currColIdx++) {\n    const aColumnOfSquaresArr = [];\n\n    for (let currRowIdx = 0; currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n      aColumnOfSquaresArr.push(board[currRowIdx][currColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= TOTALNUMOFROWS; offset++) {\n      const verticalFourAdjacentSquares = aColumnOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n\n      if (verticalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // Check diagonals\n  // Calculate score for positive sloping diagonal (bottom-left to top-right FOR THE LEFT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2) - 1; currRowIdx >= 0; currRowIdx--) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = 0; runningRowIdx < TOTALNUMOFROWS && runningColIdx < TOTALNUMOFCOLUMNS; runningRowIdx++, runningColIdx++) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n\n      if (diagonalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // Continue calculating the score for positive sloping diagonal (bottom-left to top-right FOR THE RIGHT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2); currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = TOTALNUMOFCOLUMNS - 1; runningRowIdx >= 0 && runningColIdx > 0; runningRowIdx--, runningColIdx--) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n\n      if (diagonalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // Calculate score for negative sloping diagonal (top-left to bottom-right FOR THE LEFT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2); currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = 0; runningRowIdx >= 0 && runningColIdx < TOTALNUMOFCOLUMNS; runningRowIdx--, runningColIdx++) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n\n      if (diagonalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // Continue calculating the score for negative sloping diagonal (top-left to bottom-right FOR THE RIGHT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2) - 1; currRowIdx >= 0; currRowIdx--) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = TOTALNUMOFCOLUMNS - 1; runningRowIdx < TOTALNUMOFROWS && runningColIdx > 0; runningRowIdx++, runningColIdx--) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n\n      if (diagonalFourAdjacentSquares.every(val => val === player)) {\n        return true;\n      }\n    }\n  } // if you reach here, there is no winner\n\n\n  return false;\n}\n\nfunction findLegalRowIdxWithinColumn(board, selectedColIdx) {\n  /**\n   * Returns the row index of a legal square that can be filled given the board (2 dimensional row x col).\n   * Note the legal square will be within the same column as selectedColIdx.\n   * If all the squares within selectedColIdx's column are filled, then this function returns -1.\n   */\n  const didNotFindLegalRowIdxWithinColumnIdx = -1;\n\n  for (let rowIdx = 0; rowIdx < board.length; rowIdx++) {\n    if (board[rowIdx][selectedColIdx] === null) {\n      return rowIdx;\n    }\n  }\n\n  return didNotFindLegalRowIdxWithinColumnIdx;\n}\n\nfunction calculateScoreForThese4Squares(arr, maximizingPlayer, minimizingPlayer) {\n  /**\n   * Returns the score for the given arr, assuming the length of the arr is 4\n   */\n  let score = 0;\n\n  if (arr.filter(val => val === maximizingPlayer).length === 3 && arr.filter(val => val === null).length === 1) {\n    score += 15;\n  } else if (arr.filter(val => val === maximizingPlayer).length === 2 && arr.filter(val => val === null).length === 2) {\n    score += 2;\n  }\n\n  if (arr.filter(val => val === minimizingPlayer).length === 3 && arr.filter(val => val === null).length === 1) {\n    score -= 4;\n  }\n\n  return score;\n}\n\nfunction calculateScore(board, maximizingPlayer, minimizingPlayer) {\n  /**\n   * Returns the score for placing maximizingPlayer's piece onto the board whose location is rowIdx and colIdx.\n   */\n  let score = 0;\n  const TOTALNUMOFROWS = board.length;\n  const TOTALNUMOFCOLUMNS = board[0].length;\n  const WINDOWLENGTH = 4;\n  const CENTERCOLUMNIDX = Math.floor(TOTALNUMOFCOLUMNS / 2); // score for center piece (preference center location)\n\n  for (let currRowIdx = 0; currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    if (board[currRowIdx][CENTERCOLUMNIDX] === maximizingPlayer) {\n      score += 3;\n    }\n  } // Score for horizontal\n  // Scores are calculated for window lengths of 4\n\n\n  for (let currRowIdx = 0; currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    for (let offset = 0; offset + WINDOWLENGTH <= TOTALNUMOFCOLUMNS; offset++) {\n      const horizontalFourAdjacentSquares = board[currRowIdx].slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(horizontalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  } // Score for vertical\n  // Scores are calculated for window lengths of 4\n\n\n  for (let currColIdx = 0; currColIdx < TOTALNUMOFCOLUMNS; currColIdx++) {\n    const aColumnOfSquaresArr = [];\n\n    for (let currRowIdx = 0; currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n      aColumnOfSquaresArr.push(board[currRowIdx][currColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= TOTALNUMOFROWS; offset++) {\n      const verticalFourAdjacentSquares = aColumnOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(verticalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  } // Score for diagonal\n  // Scores are calculated for window lengths of 4\n  // Calculate score for positive sloping diagonal (bottom-left to top-right FOR THE LEFT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2) - 1; currRowIdx >= 0; currRowIdx--) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = 0; runningRowIdx < TOTALNUMOFROWS && runningColIdx < TOTALNUMOFCOLUMNS; runningRowIdx++, runningColIdx++) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(diagonalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  } // Continue calculating the score for positive sloping diagonal (bottom-left to top-right FOR THE RIGHT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2); currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = TOTALNUMOFCOLUMNS - 1; runningRowIdx >= 0 && runningColIdx > 0; runningRowIdx--, runningColIdx--) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(diagonalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  } // Calculate score for negative sloping diagonal (top-left to bottom-right FOR THE LEFT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2); currRowIdx < TOTALNUMOFROWS; currRowIdx++) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = 0; runningRowIdx >= 0 && runningColIdx < TOTALNUMOFCOLUMNS; runningRowIdx--, runningColIdx++) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(diagonalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  } // Continue calculating the score for negative sloping diagonal (top-left to bottom-right FOR THE RIGHT HALF OF THE BOARD)\n\n\n  for (let currRowIdx = Math.floor(TOTALNUMOFROWS / 2) - 1; currRowIdx >= 0; currRowIdx--) {\n    const aDiagonalOfSquaresArr = [];\n\n    for (let runningRowIdx = currRowIdx, runningColIdx = TOTALNUMOFCOLUMNS - 1; runningRowIdx < TOTALNUMOFROWS && runningColIdx > 0; runningRowIdx++, runningColIdx--) {\n      aDiagonalOfSquaresArr.push(board[runningRowIdx][runningColIdx]);\n    }\n\n    for (let offset = 0; offset + WINDOWLENGTH <= aDiagonalOfSquaresArr.length; offset++) {\n      const diagonalFourAdjacentSquares = aDiagonalOfSquaresArr.slice(offset, offset + WINDOWLENGTH);\n      score += calculateScoreForThese4Squares(diagonalFourAdjacentSquares, maximizingPlayer, minimizingPlayer);\n    }\n  }\n\n  return score;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/portfolio/connect4/minimax.js\n");

/***/ }),

/***/ "./components/portfolio/connect4/new2DArray.js":
/*!*****************************************************!*\
  !*** ./components/portfolio/connect4/new2DArray.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction new2DArray(numOfRows, numOfCols) {\n  /**\n   * Creates a 2-dimensional array (numOfRows x numOfCols) \n   * and initializes each element to null.\n   * Returns the created 2-dimensional array. \n   */\n  const twoDimArr = new Array(numOfRows);\n\n  for (let rowIdx = 0; rowIdx < twoDimArr.length; rowIdx++) {\n    twoDimArr[rowIdx] = new Array(numOfCols);\n\n    for (let colIdx = 0; colIdx < twoDimArr[rowIdx].length; colIdx++) {\n      twoDimArr[rowIdx][colIdx] = null;\n    }\n  }\n\n  return twoDimArr;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new2DArray);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9uZXcyREFycmF5LmpzP2M1MTciXSwibmFtZXMiOlsibmV3MkRBcnJheSIsIm51bU9mUm93cyIsIm51bU9mQ29scyIsInR3b0RpbUFyciIsIkFycmF5Iiwicm93SWR4IiwibGVuZ3RoIiwiY29sSWR4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLFNBQVNBLFVBQVQsQ0FBb0JDLFNBQXBCLEVBQStCQyxTQUEvQixFQUEwQztBQUN0QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0ksUUFBTUMsU0FBUyxHQUFHLElBQUlDLEtBQUosQ0FBVUgsU0FBVixDQUFsQjs7QUFDQSxPQUFLLElBQUlJLE1BQU0sR0FBRyxDQUFsQixFQUFxQkEsTUFBTSxHQUFHRixTQUFTLENBQUNHLE1BQXhDLEVBQWdERCxNQUFNLEVBQXRELEVBQTBEO0FBQ3RERixhQUFTLENBQUNFLE1BQUQsQ0FBVCxHQUFvQixJQUFJRCxLQUFKLENBQVVGLFNBQVYsQ0FBcEI7O0FBQ0EsU0FBSyxJQUFJSyxNQUFNLEdBQUcsQ0FBbEIsRUFBcUJBLE1BQU0sR0FBR0osU0FBUyxDQUFDRSxNQUFELENBQVQsQ0FBa0JDLE1BQWhELEVBQXdEQyxNQUFNLEVBQTlELEVBQWtFO0FBQzlESixlQUFTLENBQUNFLE1BQUQsQ0FBVCxDQUFrQkUsTUFBbEIsSUFBNEIsSUFBNUI7QUFDSDtBQUNKOztBQUNELFNBQU9KLFNBQVA7QUFDSDs7QUFFY0gseUVBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL3BvcnRmb2xpby9jb25uZWN0NC9uZXcyREFycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbmV3MkRBcnJheShudW1PZlJvd3MsIG51bU9mQ29scykge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSAyLWRpbWVuc2lvbmFsIGFycmF5IChudW1PZlJvd3MgeCBudW1PZkNvbHMpIFxuICAgICAqIGFuZCBpbml0aWFsaXplcyBlYWNoIGVsZW1lbnQgdG8gbnVsbC5cbiAgICAgKiBSZXR1cm5zIHRoZSBjcmVhdGVkIDItZGltZW5zaW9uYWwgYXJyYXkuIFxuICAgICAqL1xuICAgIGNvbnN0IHR3b0RpbUFyciA9IG5ldyBBcnJheShudW1PZlJvd3MpO1xuICAgIGZvciAobGV0IHJvd0lkeCA9IDA7IHJvd0lkeCA8IHR3b0RpbUFyci5sZW5ndGg7IHJvd0lkeCsrKSB7XG4gICAgICAgIHR3b0RpbUFycltyb3dJZHhdID0gbmV3IEFycmF5KG51bU9mQ29scyk7XG4gICAgICAgIGZvciAobGV0IGNvbElkeCA9IDA7IGNvbElkeCA8IHR3b0RpbUFycltyb3dJZHhdLmxlbmd0aDsgY29sSWR4KyspIHtcbiAgICAgICAgICAgIHR3b0RpbUFycltyb3dJZHhdW2NvbElkeF0gPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0d29EaW1BcnI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldzJEQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/portfolio/connect4/new2DArray.js\n");

/***/ }),

/***/ "./node_modules/bootstrap/dist/css/bootstrap.css":
/*!*******************************************************!*\
  !*** ./node_modules/bootstrap/dist/css/bootstrap.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/bootstrap/dist/css/bootstrap.css\n");

/***/ }),

/***/ "./pages/connect4.js":
/*!***************************!*\
  !*** ./pages/connect4.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.css */ \"./node_modules/bootstrap/dist/css/bootstrap.css\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_portfolio_Connect4Game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/portfolio/Connect4Game */ \"./components/portfolio/Connect4Game.js\");\n\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/pages/connect4.js\";\n\n\n\nconst Connect4 = () => {\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_components_portfolio_Connect4Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, undefined);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Connect4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9jb25uZWN0NC5qcz80YzkxIl0sIm5hbWVzIjpbIkNvbm5lY3Q0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7O0FBRUEsTUFBTUEsUUFBUSxHQUFHLE1BQU07QUFDbkIsc0JBQ0kscUVBQUMsMEVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURKO0FBR0gsQ0FKRDs7QUFNZUEsdUVBQWYiLCJmaWxlIjoiLi9wYWdlcy9jb25uZWN0NC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MnO1xuaW1wb3J0IENvbm5lY3Q0R2FtZSBmcm9tIFwiLi4vY29tcG9uZW50cy9wb3J0Zm9saW8vQ29ubmVjdDRHYW1lXCI7XG5cbmNvbnN0IENvbm5lY3Q0ID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxDb25uZWN0NEdhbWUgLz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29ubmVjdDQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/connect4.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react/jsx-dev-runtime\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC9qc3gtZGV2LXJ1bnRpbWVcIj9jZDkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InJlYWN0L2pzeC1kZXYtcnVudGltZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0L2pzeC1kZXYtcnVudGltZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react/jsx-dev-runtime\n");

/***/ })

/******/ });