{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/components/portfolio/Connect4Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Board from './connect4/Board';\nimport React, { Component } from 'react'; // Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nvar Connect4Game = /*#__PURE__*/function (_React$Component) {\n  _inherits(Connect4Game, _React$Component);\n\n  var _super = _createSuper(Connect4Game);\n\n  function Connect4Game(props) {\n    var _this;\n\n    _classCallCheck(this, Connect4Game);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      squares: Array(42).fill(null),\n      // either \"human\" or \"ai\" or null\n      humanIsNext: true,\n      selectedSquareIdx: null\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.findLegalSquare = _this.findLegalSquare.bind(_assertThisInitialized(_this));\n    _this.calculateWinner = _this.calculateWinner.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Connect4Game, [{\n    key: \"handleClick\",\n    value: function handleClick(currentSquareIdx) {\n      var squares = this.state.squares.slice();\n      var legalSquareToFillIdx = this.findLegalSquare(currentSquareIdx);\n\n      if (legalSquareToFillIdx !== -1) {\n        squares[legalSquareToFillIdx] = this.state.humanIsNext ? \"human\" : \"ai\";\n        this.setState(function (prevState) {\n          return {\n            squares: squares,\n            humanIsNext: !prevState.humanIsNext,\n            selectedSquareIdx: legalSquareToFillIdx\n          };\n        });\n      }\n    }\n  }, {\n    key: \"findLegalSquare\",\n    value: function findLegalSquare(idx) {\n      /**\n       * Returns the index of a legal square that can be filled. Otherwise, -1.\n       */\n      var didNotFindLegalSquareIdx = -1;\n      var traversingIdx = idx;\n\n      while (traversingIdx - 7 >= 0) {\n        traversingIdx -= 7;\n      }\n\n      for (traversingIdx; traversingIdx < 42; traversingIdx += 7) {\n        if (this.state.squares[traversingIdx] === null) {\n          return traversingIdx;\n        }\n      }\n\n      return didNotFindLegalSquareIdx;\n    }\n  }, {\n    key: \"calculateWinner\",\n    value: function calculateWinner() {\n      /**\n       * Returns the name of the winner \"You\" or \"AI\". Else returns null.\n       */\n      // Check horizontal\n      var currRowIdx = this.state.selectedSquareIdx - this.state.selectedSquareIdx % 7;\n      var frontRowIdx = currRowIdx;\n      var howManyConsecutiveCounter = 1; // always starts at 1 because each piece counts as one consecutive piece\n\n      for (currRowIdx; currRowIdx < frontRowIdx + 7; currRowIdx++) {\n        if (howManyConsecutiveCounter === 4) {\n          return this.state.squares[currRowIdx];\n        } else if (currRowIdx + 1 < frontRowIdx + 7 && this.state.squares[currRowIdx] === this.state.squares[currRowIdx + 1]) {\n          howManyConsecutiveCounter++;\n        } else {\n          // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n          howManyConsecutiveCounter = 1;\n        }\n      } // Check vertical\n\n\n      var currColIdx = this.state.selectedSquareIdx % 7;\n      var outOfBoundsIdx = 42;\n      howManyConsecutiveCounter = 1; // always starts at 1 because each piece counts as one consecutive piece\n\n      for (currColIdx; currColIdx < outOfBoundsIdx; currColIdx += 7) {\n        if (howManyConsecutiveCounter === 4) {\n          return this.state.squares[currColIdx];\n        } else if (currColIdx + 1 < frontColIdx + 6 && this.state.squares[currColIdx] === this.state.squares[currColIdx + 1]) {\n          howManyConsecutiveCounter++;\n        } else {\n          // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n          howManyConsecutiveCounter = 1;\n        }\n      } // Check Diagonal\n\n\n      return \"no winner\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = this.calculateWinner();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"d-flex justify-content-center\",\n          children: \"This is the Connect 4 Project!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), winner !== \"no winner\" ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"The winner is: the \", winner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 43\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Can you beat the AI?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            squares: this.state.squares,\n            onClick: this.handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Connect4Game;\n}(React.Component);\n\n;\nexport default Connect4Game;","map":{"version":3,"sources":["/Users/kevintsai/Desktop/resume_website/components/portfolio/Connect4Game.js"],"names":["Board","React","Component","Connect4Game","props","state","squares","Array","fill","humanIsNext","selectedSquareIdx","handleClick","bind","findLegalSquare","calculateWinner","currentSquareIdx","slice","legalSquareToFillIdx","setState","prevState","idx","didNotFindLegalSquareIdx","traversingIdx","currRowIdx","frontRowIdx","howManyConsecutiveCounter","currColIdx","outOfBoundsIdx","frontColIdx","winner"],"mappings":"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","sourcesContent":["import Board from './connect4/Board';\nimport React, { Component } from 'react';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nclass Connect4Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(42).fill(null), // either \"human\" or \"ai\" or null\n            humanIsNext: true,\n            selectedSquareIdx: null\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.findLegalSquare = this.findLegalSquare.bind(this);\n        this.calculateWinner = this.calculateWinner.bind(this);\n    }\n\n    handleClick(currentSquareIdx) {\n        const squares = this.state.squares.slice();\n        const legalSquareToFillIdx = this.findLegalSquare(currentSquareIdx);\n        if (legalSquareToFillIdx !== -1) {\n            squares[legalSquareToFillIdx] = this.state.humanIsNext ? \"human\" : \"ai\";\n            this.setState(prevState => ({\n                squares: squares,\n                humanIsNext: !prevState.humanIsNext,\n                selectedSquareIdx: legalSquareToFillIdx\n            }));\n        }\n    }\n\n    findLegalSquare(idx) {\n        /**\n         * Returns the index of a legal square that can be filled. Otherwise, -1.\n         */\n        const didNotFindLegalSquareIdx = -1;\n        let traversingIdx = idx;\n        while (traversingIdx - 7 >= 0) {\n            traversingIdx -= 7;\n        }\n        for (traversingIdx; traversingIdx < 42; traversingIdx += 7) {\n            if (this.state.squares[traversingIdx] === null) {\n                return traversingIdx;\n            }\n        }\n        return didNotFindLegalSquareIdx;\n    }\n\n    calculateWinner() {\n        /**\n         * Returns the name of the winner \"You\" or \"AI\". Else returns null.\n         */\n\n        // Check horizontal\n        let currRowIdx = this.state.selectedSquareIdx - (this.state.selectedSquareIdx % 7);\n        const frontRowIdx = currRowIdx;\n        let howManyConsecutiveCounter = 1; // always starts at 1 because each piece counts as one consecutive piece\n        for (currRowIdx; currRowIdx < frontRowIdx + 7; currRowIdx++) {\n            if (howManyConsecutiveCounter === 4) {\n                return this.state.squares[currRowIdx];\n            } else if (currRowIdx + 1 < frontRowIdx + 7 && this.state.squares[currRowIdx] === this.state.squares[currRowIdx + 1]) {\n                howManyConsecutiveCounter++;\n            } else {\n                // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n                howManyConsecutiveCounter = 1;\n            }\n        }\n\n        // Check vertical\n        let currColIdx = this.state.selectedSquareIdx % 7;\n        const outOfBoundsIdx = 42;\n        howManyConsecutiveCounter = 1; // always starts at 1 because each piece counts as one consecutive piece\n        for (currColIdx; currColIdx < outOfBoundsIdx ; currColIdx += 7) {\n            if (howManyConsecutiveCounter === 4) {\n                return this.state.squares[currColIdx];\n            } else if (currColIdx + 1 < frontColIdx + 6 && this.state.squares[currColIdx] === this.state.squares[currColIdx + 1]) {\n                howManyConsecutiveCounter++;\n            } else {\n                // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n                howManyConsecutiveCounter = 1;\n            }\n        }\n\n        // Check Diagonal\n\n        return \"no winner\";\n    }\n\n    render() {\n        const winner = this.calculateWinner();\n        return (\n            <div className=\"container\">\n                <h1 className=\"d-flex justify-content-center\">This is the Connect 4 Project!</h1>\n                {winner !== \"no winner\" ? <h2>The winner is: the {winner}</h2> : \"\"}\n                <p>Can you beat the AI?</p>\n                <div className=\"d-flex justify-content-center\"><Board squares={this.state.squares} onClick={this.handleClick} /></div>\n            </div>\n        );\n    };\n};\n\nexport default Connect4Game;"]},"metadata":{},"sourceType":"module"}