{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kevintsai/Desktop/resume_website/components/portfolio/Connect4Game.js\";\nimport Board from './connect4/Board';\nimport React, { Component } from 'react'; // Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nclass Connect4Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(42).fill(null),\n      // either \"human\" or \"ai\" or null\n      humanIsNext: true,\n      selectedSquareIdx: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.findLegalSquare = this.findLegalSquare.bind(this);\n  }\n\n  handleClick(currentSquareIdx) {\n    const squares = this.state.squares.slice();\n    const legalSquareToFillIdx = this.findLegalSquare(currentSquareIdx);\n\n    if (legalSquareToFillIdx !== -1) {\n      squares[legalSquareToFillIdx] = this.state.humanIsNext ? \"human\" : \"ai\";\n      this.setState(prevState => ({\n        squares: squares,\n        humanIsNext: !prevState.humanIsNext,\n        selectedSquareIdx: legalSquareToFillIdx\n      }));\n    }\n  }\n\n  findLegalSquare(idx) {\n    /**\n     * Returns the index of a legal square that can be filled. Otherwise, -1.\n     */\n    const didNotFindLegalSquareIdx = -1;\n    let traversingIdx = idx;\n\n    while (traversingIdx - 7 >= 0) {\n      traversingIdx -= 7;\n    }\n\n    for (traversingIdx; traversingIdx < 42; traversingIdx += 7) {\n      if (this.state.squares[traversingIdx] === null) {\n        return traversingIdx;\n      }\n    }\n\n    return didNotFindLegalSquareIdx;\n  }\n\n  calculateWinner() {\n    /**\n     * Returns the name of the winner \"You\" or \"AI\". Else returns null.\n     */\n    // Check horizontal\n    let currRowIdx = this.state.selectedSquareIdx - this.state.selectedSquareIdx % 7;\n    const frontRowIdx = currRowIdx;\n    let inARowCounter = 1; // always starts at 1 because each piece counts as one-in-a-row\n\n    for (currRowIdx; currRowIdx < frontRowIdx + 7; currRowIdx++) {\n      if (inARowCounter === 4) {\n        return this.state.squares[currRowIdx];\n      } else if (currRowIdx + 1 < frontRowIdx + 7 && this.state.squares[currRowIdx] === this.state.squares[currRowIdx + 1]) {\n        inARowCounter++;\n      } else {\n        // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n        inARowCounter = 1;\n      }\n    } // Check vertical\n    // Check Diagonal\n\n  }\n\n  render() {\n    const winner = this.calculateWinner();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"d-flex justify-content-center\",\n        children: \"This is the Connect 4 Project!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Can you beat the AI?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: this.state.squares,\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Connect4Game;","map":{"version":3,"sources":["/Users/kevintsai/Desktop/resume_website/components/portfolio/Connect4Game.js"],"names":["Board","React","Component","Connect4Game","constructor","props","state","squares","Array","fill","humanIsNext","selectedSquareIdx","handleClick","bind","findLegalSquare","currentSquareIdx","slice","legalSquareToFillIdx","setState","prevState","idx","didNotFindLegalSquareIdx","traversingIdx","calculateWinner","currRowIdx","frontRowIdx","inARowCounter","render","winner"],"mappings":"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","sourcesContent":["import Board from './connect4/Board';\nimport React, { Component } from 'react';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nclass Connect4Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(42).fill(null), // either \"human\" or \"ai\" or null\n            humanIsNext: true,\n            selectedSquareIdx: null\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.findLegalSquare = this.findLegalSquare.bind(this);\n    }\n\n    handleClick(currentSquareIdx) {\n        const squares = this.state.squares.slice();\n        const legalSquareToFillIdx = this.findLegalSquare(currentSquareIdx);\n        if (legalSquareToFillIdx !== -1) {\n            squares[legalSquareToFillIdx] = this.state.humanIsNext ? \"human\" : \"ai\";\n            this.setState(prevState => ({\n                squares: squares,\n                humanIsNext: !prevState.humanIsNext,\n                selectedSquareIdx: legalSquareToFillIdx\n            }));\n        }\n    }\n\n    findLegalSquare(idx) {\n        /**\n         * Returns the index of a legal square that can be filled. Otherwise, -1.\n         */\n        const didNotFindLegalSquareIdx = -1;\n        let traversingIdx = idx;\n        while (traversingIdx - 7 >= 0) {\n            traversingIdx -= 7;\n        }\n        for (traversingIdx; traversingIdx < 42; traversingIdx += 7) {\n            if (this.state.squares[traversingIdx] === null) {\n                return traversingIdx;\n            }\n        }\n        return didNotFindLegalSquareIdx;\n    }\n\n    calculateWinner() {\n        /**\n         * Returns the name of the winner \"You\" or \"AI\". Else returns null.\n         */\n\n        // Check horizontal\n        let currRowIdx = this.state.selectedSquareIdx - (this.state.selectedSquareIdx % 7);\n        const frontRowIdx = currRowIdx;\n        let inARowCounter = 1; // always starts at 1 because each piece counts as one-in-a-row\n        for (currRowIdx; currRowIdx < frontRowIdx + 7; currRowIdx++) {\n            if (inARowCounter === 4) {\n                return this.state.squares[currRowIdx];\n            } else if (currRowIdx + 1 < frontRowIdx + 7 && this.state.squares[currRowIdx] === this.state.squares[currRowIdx + 1]) {\n                inARowCounter++;\n            } else {\n                // either the loop ends and there is no winner found here OR the next adjacent piece is a different color\n                inARowCounter = 1;\n            }\n        }\n\n        // Check vertical\n\n        // Check Diagonal\n    }\n\n    render() {\n        const winner = this.calculateWinner();\n        return (\n            <div className=\"container\">\n                <h1 className=\"d-flex justify-content-center\">This is the Connect 4 Project!</h1>\n                <h2></h2>\n                <p>Can you beat the AI?</p>\n                <div className=\"d-flex justify-content-center\"><Board squares={this.state.squares} onClick={this.handleClick} /></div>\n            </div>\n        );\n    };\n};\n\nexport default Connect4Game;"]},"metadata":{},"sourceType":"module"}